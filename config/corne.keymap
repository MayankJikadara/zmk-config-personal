/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// |CTL/TB|  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | CTL/'|
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ENT |
//                    | ALT | LWR | GUI |   | SPC | RSE  | GUI |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T      &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &mt LCTRL TAB &kp A &kp S &kp D &kp F &kp G  &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B      &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                  &kp LALT &mo 1 &kp LGUI        &kp SPACE &mo 2 &kp RGUI
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |     |     | UP  |     |     | BKSP |
// |      |  6  |  7  |  8  |  9  |  0  |   |     | LFT | DWN | RGT |     |      |
// | SHFT | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 |  ENT |
//                    | ALT |     | GUI |   | SPC | ADJ | GUI |
                        bindings = <
   &kp ESC    &kp N1 &kp N2  &kp N3 &kp N4 &kp N5    &trans &trans &kp UP &trans &trans &kp BSPC
   &trans &kp N6 &kp N7 &kp N8 &kp N9 &kp N0         &trans &kp LEFT &kp DOWN &kp RIGHT &trans &trans
   &kp LSHFT  &kp F1 &kp F2 &kp F3 &kp F4 &kp F5     &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp RET
                        &kp LALT &trans &kp LGUI     &kp SPACE &mo 3 &kp RGUI
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |      |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   |
//                    | ALT | ADJ | GUI |   | SPC |     | GUI |
                        bindings = <
   &kp  ESC  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans &trans &trans &trans &trans &trans               &kp MINUS &kp EQUAL &kp LBRC &kp RBRC  &kp PIPE &kp GRAVE
   &kp LSHIFT &trans &trans &trans &trans &trans           &kp UNDER &kp PLUS  &kp LBKT &kp RBKT &kp BSLH &kp TILDE
                    	       &kp LALT &mo 3 &kp LGUI     &kp SPACE  &trans  &kp RGUI
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | MUTE |VOLDN|VOLUP| PREV| NEXT| PLAY|   |     |  1  |  2  |  3  |     | BTCLR|
// |      |     |     |     | BRID| BRIU|   |     |  4  |  5  |  6  |     |      |
// | CAPS | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |  7  |  8  |  9  |     |  ENT |
//                    |     |     |     |   |     |     |  0  |
                        bindings = <
   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT &kp C_PP   &trans &kp N1 &kp N2 &kp N3 &trans &bt BT_CLR
   &trans &trans  &trans &trans   &kp C_BRI_DN  &kp C_BRI_UP                 &trans &kp N4 &kp N5 &kp N6 &trans &trans
   &kp CAPS &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &kp N7 &kp N8 &kp N9 &trans &trans
                                        &trans &trans &trans                 &trans &trans &kp N0
                        >;
                };
        };
};
